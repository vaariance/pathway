"use client";

import { motion } from "framer-motion";

const paths = [
  {
    d: "m800.5,88.5l-45.5,0.5l-49,0l-50,0l0,46l1,47l-50,0l0,46l-49,0l0,-47l-49,1l0,46l-49,0l0,47l0,47l-50,-2l-48,2l-50,0l-50,0l1,46l0,47l49,0l0,46l49,1l49,0l0,45l50,1l0,47l49,-1l-1,46",
  },
  {
    d: "m656.5,598.5l-1.5,-45.5l-49,2l1,-48l-51,1l1,-47l49,1l0,-48l-49,1l0,-48l49,1l50,0l49,0l-1,-47l-49,2l0,-48l-49,1l0,-48l50,0l-1,-47l49,0l0,-46l-49,0l-49,0l-49,1l-49,0l0,-47l0,-47l-1,-42",
  },
  {
    d: "m801.5,42.5l-46.5,-0.5l-50,0l-48,0l-50,1l-49,-1l0,47l49,1l1,46l0,45l-50,1l-49,0l-49,2l0,44l0,47l49,1l0,47l-49,-1l0,46l0,47l-50,1l-49,0l-49,-2l-49,1l0,47l49,0l0,45l48,0l1,47l49,1l50,-1l48,-1l50,1l0,-47l0,-46l-1,-46l50,0l49,0l49,0l49,0l46,-1",
  },
  {
    d: "m214.5,-0.5l-1.5,42.5l50,0l0,46l0,47l0,47l0,46l0,47l49,0l49,-1l0,47l0,47l49,0l50,1l49,0l-1,46l0,46l1,46l49,2l49,-1l49,0l50,0l0,46l-1,48",
  },
  {
    d: "m214.5,600.5l-0.5,-46.5l49,0l0,-47l49,0l0,-46l49,0l0,-46l0,-48l-49,1l0,-47l50,0l49,0l49,0l0,-46l-50,0l0,-47l50,0l49,0l49,0l-1,47l51,0l0,46l48,1l0,46l0,46l0,47l50,0l49,0l0,47l46,0",
  },
  {
    d: "m800.5,554.5l-45.5,-0.5l-48,0l-51,1l-49,-1l-49,0l-49,-1l0,-46l-49,1l-50,0l0,46l-49,-1l-49,1l0,-48l-49,1l0,-46l-49,0l0,-47l0,-46l0,-46l0,-47l-50,0l-50,0l-50,0l0,-47l0,-47l-50,0",
  },
  {
    d: "m411.5,599.5l-0.5,-46.5l-2,-46l1,-47l0,-45l0,-48l0,-47l0,-46l-49,0l0,-46l0,-47l49,1l0,-48l50,1l1,-46l-50,0l-50,0l-49,0l0,-47l49,0l-1,-42",
  },
  {
    d: "m460.5,599.5l-0.5,-46.5l-1,-46l-49,0l-49,0l0,-46l49,1l49,-1l49,0l50,0l49,0l49,0l0,46l0,47l-49,-1l0,47",
  },
  {
    d: "m656.5,-0.5l-0.5,41.5l0,47l-49,1l-49,0l-1,46l0,46l0,47l-48,0l0,47l49,0l-1,46l-48,0l0,46l49,0l-1,47l-49,0l-48,0l-1,46l0,46l50,0l0,46l0,49",
  },
  {
    d: "m755.5,599.5l-0.5,-46.5l-1,-46l-48,0l-1,-47l0,-46l0,-47l0,-46l1,-46l-51,0l0,-47l0,-48l1,-46l1,-46l49,0l0,-47l0,-42",
  },
  {
    d: "m800.5,461.5l-45.5,-0.5l0,-47l0,-47l0,-46l0,-46l-49,0l0,-46l-51,-1l0,-48l-48,1l-1,47l-48,-1l-50,1l0,-47l0,-46l-48,0l-1,47l-49,-1l0,47l-49,0l-49,0l0,46l0,47l-49,1l-1,46l0,46l-48,0l-50,1l0,-47l-50,0l-50,0l-50,1",
  },
  {
    d: "m754.5,-0.5l-0.5,41.5l0,47l-49,0l0,47l0,46l0,47l49,0l0,47l1,47l-51,-1l0,47l51,-1l0,47l-50,0l-49,0l-49,-1l0,-46l1,-46l-51,0l1,45l0,48l-1,46l50,0l0,47l0,46l-49,0l-1,48",
  },
  {
    d: "m801.5,228.5l-47.5,-0.5l0,-47l-49,0l0,-47l49,1l0,-48l-49,0l-49,1l-49,0l0,-46l-49,-1l-1,48l-49,-1l-48,0l-50,0l0,46l-49,1l0,46l-49,0l0,47l-49,0l0,46l0,47l-49,0l-50,0l0,47l50,-1l48,0l50,0l0,46l0,47l-49,1l-49,0l0,46l49,0l0,46l49,0l0,48",
  },
  {
    d: "m164.5,598.5l-0.5,-44.5l50,0l0,-47l-50,1l0,-47l50,0l0,-48l-50,1l-51,1l1,-48l0,-45l50,0l0,-48l50,0l49,0l0,-47l-49,1l0,-47l49,0l49,0l0,-46l49,0l0,-47l0,-47l49,1l0,46l50,-1l-1,-46l49,0l50,0l49,0l49,0l50,0l48,1l-1,46l1,46l0,47l48,0",
  },
  {
    d: "m460.5,-0.5l0.5,41.5c0.5,0.5 -50.5,0.5 -50.5,0.5c0,0 -49,1 -49.5,0.5c0.5,0.5 -48.5,-0.5 -49,-1c0.5,0.5 -48.5,0.5 -49,0c0.5,0.5 0.5,47.5 0,47c0.5,0.5 49.5,0.5 49,0c0.5,0.5 0.5,47.5 0.5,47.5c0,0 -49,0 -49.5,-0.5c0.5,0.5 -48.5,-0.5 -49,-1c0.5,0.5 -48.5,1.5 -49,1c0.5,0.5 -0.5,46.5 -1,46c0.5,0.5 -49.5,0.5 -50,0c0.5,0.5 0.5,47.5 0,47c0.5,0.5 1.5,45.5 1,45c0.5,0.5 -0.5,48.5 -1,48c0.5,0.5 -49.5,0.5 -50,0c0.5,0.5 0.5,46.5 0,46c0.5,0.5 0.5,48.5 0,48c0.5,0.5 49.5,-0.5 49,-1c0.5,0.5 51.5,0.5 51,0c0.5,0.5 0.5,47.5 0,47c0.5,0.5 0.5,46.5 0,46c0.5,0.5 1.5,47.5 1,47c0.5,0.5 -50.5,1.5 -51,1c0.5,0.5 -49.5,0.5 -50,0c0.5,0.5 0.5,44.5 0,44",
  },
  {
    d: "m263.5,-1.5l0.5,42.5l-50,0l0,48l0,45l0,47l-50,0c0.5,0.5 1.5,47.5 0.5,47.5c-1,0 50,0 49.5,-0.5c0.5,0.5 0.5,45.5 0,45c0.5,0.5 48.5,1.5 48,1c0.5,0.5 50.5,0.5 50,0c0.5,0.5 0.5,46.5 0,46c0.5,0.5 -0.5,47.5 -1,47c0.5,0.5 1.5,46.5 1,46c0.5,0.5 0.5,49.5 0,49c0.5,0.5 1.5,44.5 0.5,44.5c-1,0 48,1 47.5,0.5c0.5,0.5 0.5,45.5 0,45c0.5,0.5 1.5,48.5 1,48",
  },
  {
    d: "m313.5,-0.5l-1.5,41.5l0,46l-49,0l-49,1l-50,-1l0,47l-50,1l1,46l0,47l49,0l0,46l-2,47l2,47l-50,-1l-1,47l1,48c0.5,0.5 0.5,47.5 0.5,47.5c0,0 0,45 -0.5,44.5c0.5,0.5 50.5,0.5 50,0c0.5,0.5 50.5,0.5 50,0c0.5,0.5 49.5,-0.5 49,-1c0.5,0.5 1.5,47.5 1,47",
  },
  {
    d: "m14.5,598.5l-0.5,-43.5l50,-1l0,-46l51,0l50,-1l-2,-46l-49,1l-50,0l0,-47l-49,-1l-1,-46l0,-47l50,0l0,-47l0,-46l51,-1l0,-46l-51,0l0,-47l50,0l0,-47l50,-1l-1,-45l51,0l50,0l48,-1l49,1l49,0l0,-42",
  },
  {
    d: "m114.5,600.5l-0.5,-46.5l-50,1l-50,-1l0,-46l51,0l-1,-47l-50,0l1,-46l49,0l1,-48l-1,-47l0,-45l-50,0l0,-47l50,-1l0,-47l-1,-48l-48,3l0,-48l49,1l50,0l0,-47l-50,0l-49,0l0,-42",
  },
  {
    d: "m164.5,-1.5l-1.5,42.5l-50,0l-49,-1l0,47l0,48l-1,45l51,1l51,0l49,0l49,0l49,-1l49,0l49,1l50,0l48,0l0,-46l49,0l0,-48l1,-47",
  },
];

export const AnimatedLines = () => {
  return (
    <>
      <div className="absolute inset-0 overflow-hidden z-0">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          className="text-primary/20 dark:text-primary-foreground/50 w-full min-w-[1024px] overflow-x-hidden h-full"
          viewBox="0 0 810 600"
          preserveAspectRatio="none"
        >
          <g>
            {paths.map((path, i) => (
              <motion.path
                initial={{ pathLength: 0 }}
                animate={{ pathLength: 1 }}
                transition={{
                  delay: i + 1,
                  duration: 10,
                  ease: "easeInOut",
                  repeat: Infinity,
                  repeatType: "loop",
                }}
                fill="none"
                id={`anitmated-lines-${i}`}
                stroke="currentColor"
                strokeWidth={1}
                d={path.d}
              />
            ))}
          </g>
        </svg>
      </div>
      {/* <div className="fixed inset-0 z-1 pointer-events-none bg-gradient-to-t from-transparent from-35% to-background/70 to-65%" /> */}
    </>
  );
};
